extends layout

block content
  script.
    var setting_maxTxCount = parseInt("100");
    var setting_txPerPage = parseInt("10");
    var lengthMenuOpts = [];
    var lengthMenuOptsAdd = [ 10, 25, 50, 75, 100, 250, 500, 1000 ];
    for (i=0; i < lengthMenuOptsAdd.length; i++) {
      if (setting_maxTxCount >= lengthMenuOptsAdd[i]) {
        lengthMenuOpts.push(lengthMenuOptsAdd[i]);
      }
    }
    if (setting_maxTxCount < setting_txPerPage) {
      var displayLengthMax = setting_maxTxCount;
    } else {
      var displayLengthMax = setting_txPerPage;
    }
    $(document).ready(function(){
      var stable = $('#block-table').dataTable( {  
        autoWidth: true,
        searching: true,
        ordering: false,
        responsive: true,
        lengthChange: true,
        processing: true,
        paging: true,
        dom: 'lrtp',
        info: false,
          language: {
            paginate: {
              previous: "<",
              next: ">",
            },
            lengthMenu: "_MENU_"
          },
        ajax: {
          url: '/ext/summary',
          dataSrc: function ( json ) {
            console.log(json.data);
            json.data[0]['height'] = "<a href='/block/" + json.data[0]['hash'] + "'>" + json.data[0]['height'] + "</a>";
            return json.data;
          }
        },
        columns: [
          { data: 'difficulty', width: '10%' },
          { data: 'supply', width: '15%' },
        ]
      });
        var rtable = $('#recent-table').dataTable( {
          autoWidth: false,
          searching: false,
          ordering: false,
          responsive: false,
          lengthChange: true,
          dom: 'lrtp',
          language: {
            paginate: {
              previous: "<",
              next: ">",
            },
            lengthMenu: "_MENU_"
          },
          processing: true,
          serverSide: true,
          info: false,
          iDisplayLength: displayLengthMax,
          lengthMenu: lengthMenuOpts,
          ajax: '/ext/getlasttxs/0',
          dataSrc: "",
          mDataProp: "",
          rowCallback: function(row, data, index) {
            var blockindex = data[0]; //variables for better readability
            var blockhash = data[1]; //variables for better readability
            var txhash = data[2]; //variables for better readability
            var outputs = data[3]; //variables for better readability
            var amount = (data[4] / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':8,'useGrouping':true}); //variables for better readability
            var amountParts = amount.split('.');
            var amount = amountParts[0] + '.<span class="decimal">' + amountParts[1] + '</span>';
            var timestamp = new Date(data[5] * 1000); //variables for better readability
            $("td:eq(0)", row).html('<a href="/block/' + blockhash + '">' + blockindex + '</a>');
            $("td:eq(1)", row).html('<a href="/tx/' + txhash + '">' + txhash + '</a>').addClass("d-none d-md-none d-lg-table-cell text-center");
            $("td:eq(2)", row).html(outputs).addClass("d-none d-md-none d-lg-table-cell text-center");
            $("td:eq(3)", row).html(amount);
            $("td:eq(4)", row).html(timestamp);
          },
        });
      setInterval( function () {
        rtable.api().ajax.reload(null, false);
        stable.api().ajax.reload(null, false);
      }, 60000 );
    });
  .row
    .col-md-10.col-md-offset-1
      if error !== null        
        .alert.alert-danger.alert-dismissable(role='alert')
          button.close(type='button', data-dismiss='alert') ×
          strong #{settings.locale.ex_error} : #{error}
      if warning !== null        
        .alert.alert-warning.alert-dismissable(role='alert')
          button.close(type='button', data-dismiss='alert') ×
          strong #{settings.locale.ex_warning} #{warning}
  
  .col-md-10.col-md-offset-1
    .panel.panel-default
      .panel-heading
          div(style="display:flex; align-items:center; column-gap:0.5rem") 
            img(src='/images/explorer.png', style='height:20px') 
            strong #{settings.locale.ex_latest_transactions}

      table#recent-table.table.table-bordered.table-striped
        thead
          tr
            if settings.baseType === 'ripple'
              th.text-center.newTableHeader #{settings.locale.ex_ledger}
            else
              th.text-center.newTableHeader #{settings.locale.ex_block}
            th.hidden-xs.text-center.newTableHeader #{settings.locale.tx_hash}
            th.hidden-xs.text-center.newTableHeader #{settings.locale.tx_recipients}
            th.text-center.newTableHeader #{settings.locale.mkt_amount} (#{settings.symbol})
            th.text-center.newTableHeader #{settings.locale.timestamp}
        tbody.text-center
    .footer-padding
      
              
